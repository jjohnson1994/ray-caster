{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAAA,IAAM,EAAM,CACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"ray-caster.8a1fbfee.js","sourceRoot":"..","sourcesContent":["const map = [\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n]\n\nconst cameraWidth = 800;\nconst cameraHeight = 500;\nconst cameraSpriteWidth = 20;\nconst mapColumns= 30;\nconst mapRows = 30;\nconst cellWidth = cameraHeight / mapColumns;\nconst fps = 1000 / 60;\nconst moveSpeed = 1;\nconst panSpeed = 0.05;\nconst rayCount = 50;\nconst rayWidth = cameraWidth / rayCount;\n\nfunction Camera() {\n  let cameraX = 300;\n  let cameraZ = 100;\n  let cameraPan = -90 * Math.PI / 180;\n\n  return {\n    get cameraX() {\n      return cameraX;\n    },\n    get cameraZ() {\n      return cameraZ;\n    },\n    get cameraPan() {\n      return cameraPan;\n    },\n    pan: (rotate: number) => {\n      cameraPan += rotate;\n    },\n    moveForward: (distance: number) => {\n      cameraX += distance * Math.cos(cameraPan);\n      cameraZ += distance * Math.sin(cameraPan);\n    }\n  }\n}\n\nfunction KeyListener() {\n  let left = false;\n  let up = false;\n  let right = false;\n  let down = false;\n\n  window.addEventListener(\"keydown\", event => {\n    switch (event.key) {\n      case \"ArrowLeft\":\n        left = true;\n        break;\n      case \"ArrowUp\":\n        up = true;\n        break;\n      case \"ArrowRight\":\n        right = true;\n        break;\n      case \"ArrowDown\":\n        down = true;\n        break;\n    }\n  });\n\n  window.addEventListener(\"keyup\", event => {\n    switch (event.key) {\n      case \"ArrowLeft\":\n        left = false;\n        break;\n      case \"ArrowUp\":\n        up = false;\n        break;\n      case \"ArrowRight\":\n        right = false;\n        break;\n      case \"ArrowDown\":\n        down = false;\n        break;\n    }\n  });\n\n  return {\n    get left() {\n      return left;\n    },\n    get up() {\n      return up;\n    },\n    get right() {\n      return right;\n    },\n    get down() {\n      return down;\n    }\n  };\n}\n\nconst keyListener = KeyListener();\nconst camera = Camera();\n\nfunction init() {\n  const canvas3D = document.querySelector(\"#canvas3D\") as HTMLCanvasElement;\n  const canvas2D = document.querySelector(\"#canvas2D\") as HTMLCanvasElement;\n  const ctx3D = canvas3D.getContext(\"2d\");\n  const ctx2D = canvas2D.getContext(\"2d\");\n  \n  window.setInterval(() => {\n    loop(ctx3D, ctx2D);\n  }, fps);\n}\n\nfunction loop(ctx3D: CanvasRenderingContext2D, ctx2D: CanvasRenderingContext2D) {\n  clearCanvases([ctx3D, ctx2D]);\n  paintCameraOnMiniMap(ctx2D);\n  paintWallsOnMiniMap(ctx2D);\n  castRays(ctx2D, ctx3D);\n  updateCameraPosition();\n}\n\nfunction clearCanvases(canvasContexes: CanvasRenderingContext2D[]) {\n  canvasContexes.forEach(ctx => {\n    ctx.clearRect(0, 0, 800, 500);\n  });\n}\n\nfunction paintCameraOnMiniMap(ctx2D: CanvasRenderingContext2D) {\n  const { cameraX, cameraZ, cameraPan } = camera;\n\n  ctx2D.translate(cameraX + cameraSpriteWidth / 2, cameraZ + cameraSpriteWidth / 2);\n  ctx2D.rotate(cameraPan);\n  ctx2D.fillRect(-(cameraSpriteWidth / 2), -(cameraSpriteWidth / 2), cameraSpriteWidth, cameraSpriteWidth);\n  ctx2D.rotate(-cameraPan);\n  ctx2D.translate(-(cameraX + cameraSpriteWidth / 2), -(cameraZ + cameraSpriteWidth / 2));\n}\n\nfunction paintWallsOnMiniMap(ctx: CanvasRenderingContext2D) {\n  let i: number;\n  let j: number;\n\n  for (i = 0; i < 30; i++) {\n    for (j = 0; j < 30; j++) {\n      const sprite = map[i][j];\n\n      if (sprite === 1) {\n        ctx.fillRect(j * cellWidth, i * cellWidth, cellWidth, cellWidth);\n      }\n    }\n  }\n}\n\nfunction castRays(ctx2D: CanvasRenderingContext2D, ctx3D: CanvasRenderingContext2D) {\n  const { cameraX, cameraZ, cameraPan } = camera;\n\n  let d: number;\n  let r: number;\n\n  for (r = rayCount * -0.5; r < rayCount * 0.5; r++) {\n    for (d = 0; d < 800; d += cellWidth * 0.25) {\n      const x = cameraX;\n      const z = cameraZ;\n\n      const x1 = x + (d * Math.cos(r * Math.PI / 180 + cameraPan));\n      const z1  = z + (d * Math.sin(r * Math.PI / 180 + cameraPan));\n\n      if (x1 >= 0 && x1 <= 800 && z1 >= 0 && z1 <= 800) {\n        ctx2D.fillRect(x1 + cameraSpriteWidth / 2, z1 + cameraSpriteWidth / 2, 1, 1);\n        const wall = checkForWall(x1 + cameraSpriteWidth / 2, z1 + cameraSpriteWidth / 2, r + rayCount * 0.5, d, ctx3D);\n\n        if (wall) {\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction checkForWall(_x: number, _z: number, rayCount: number, distance: number, ctx: CanvasRenderingContext2D) {\n  const x = Math.floor(_x / cellWidth);\n  const z = Math.floor(_z / cellWidth);\n\n  try {\n    if (map[z][x] === 1) {\n      ctx.fillStyle = LightenDarkenColor(\"#DDDDDD\", -(distance / 5));\n      ctx.fillRect(\n        rayCount * rayWidth,\n        z + distance / 2,\n        rayWidth,\n        Math.max(0, cameraHeight - distance)\n      );\n      return true;\n    }\n  } catch (error) {\n    console.error({ x, z });\n  }\n\n  return false;\n}\n\nfunction LightenDarkenColor(col: string, amt: number) {\n  // https://css-tricks.com/snippets/javascript/lighten-darken-color/ \n  let usePound = false;\n\n  if (col[0] == \"#\") {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  const num = parseInt(col,16);\n\n  let r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;\n  else if  (r < 0) r = 0;\n\n  let b = ((num >> 8) & 0x00FF) + amt;\n\n  if (b > 255) b = 255;\n  else if  (b < 0) b = 0;\n\n  let g = (num & 0x0000FF) + amt;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nfunction updateCameraPosition() {\n  if (keyListener.down) {\n    camera.moveForward(-moveSpeed);\n  } else if (keyListener.up) {\n    camera.moveForward(moveSpeed);\n  }\n\n  if (keyListener.left) {\n    camera.pan(-panSpeed);\n  } else if (keyListener.right) {\n    camera.pan(panSpeed);\n  }\n}\n\ninit();\n"]}